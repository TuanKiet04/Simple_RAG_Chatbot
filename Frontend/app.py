import streamlit as st
import time
import websockets
import asyncio
from components.chat_ui import display_messages
from components.settings import apply_dark_mode
from utils.ws_client import connect_ws
from utils.api import get_chat_history
from utils.database import fetch_chat_history  

# C·∫•u h√¨nh trang
st.set_page_config(page_title="Low-Code Chatbot", layout="wide")

# √Åp d·ª•ng Dark Mode
apply_dark_mode()

st.markdown("<h2 style='text-align: center;'>üí¨ Low-Code Chatbot</h2>", unsafe_allow_html=True)

# K·∫øt n·ªëi WebSocket
ws = connect_ws()

# Hi·ªÉn th·ªã l·ªãch s·ª≠ tin nh·∫Øn
st.subheader("Chat History")
chat_history = get_chat_history()

for entry in chat_history:
    role = entry.get("role", "unknown")
    content = entry.get("content", "")
    st.text(f"{role}: {content}")

st.subheader("Chat with Bot")

# N√∫t x√≥a l·ªãch s·ª≠ chat
if st.button("Clear Chat"):
    st.session_state.messages = []
    st.rerun()

# H√†m g·ª≠i tin nh·∫Øn qua WebSocket
async def send_message(ws, message):
    await ws.send(message)
    return await ws.recv()

# L·∫•y l·ªãch s·ª≠ chat t·ª´ database
if "messages" not in st.session_state:
    st.session_state.messages = fetch_chat_history()

# Hi·ªÉn th·ªã tin nh·∫Øn
display_messages(st.session_state.messages)

# Nh·∫≠p tin nh·∫Øn
user_input = st.chat_input("Type your message here...")

if user_input:
    # L∆∞u & hi·ªÉn th·ªã tin nh·∫Øn ng∆∞·ªùi d√πng
    st.session_state.messages.append({"role": "user", "content": user_input})
    display_messages([{"role": "user", "content": user_input}])

    # Hi·ªÉn th·ªã hi·ªáu ·ª©ng typing
    with st.chat_message("assistant", avatar="ü§ñ"):
        typing_placeholder = st.empty()
        typing_placeholder.markdown("ü§ñ *Chatbot is typing...*")
        time.sleep(1.5)

    # G·ª≠i tin nh·∫Øn & nh·∫≠n ph·∫£n h·ªìi
    response = asyncio.run(send_message(ws, user_input))

    # X√≥a hi·ªáu ·ª©ng typing v√† hi·ªÉn th·ªã ph·∫£n h·ªìi chatbot
    typing_placeholder.empty()
    st.session_state.messages.append({"role": "assistant", "content": response})
    display_messages([{"role": "assistant", "content": response}])
